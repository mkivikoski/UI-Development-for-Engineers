@import 'partials/reset';
@import 'partials/type';
@import 'partials/color';

// Variables
$columns: 12;
$huge-columns: 24;
$max-width: 960px;

// Mixin
@mixin box-size{
  -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
  -moz-box-sizing: border-box;    /* Firefox, other Gecko */
  box-sizing: border-box;         /* Opera/IE 8+ */
}

@mixin bp-medium {
  @media only screen and (min-width: 40em) {
    @content;
  }
}

@mixin bp-huge {
  @media only screen and (min-width: 55em) {
    @content;
  }
}

// Placeholders 
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// Styles
.container{
	@extend %clearfix;
	@include box-size;
	margin: 0 auto;
	max-width: $max-width;
	width: 100%;

	@include bp-medium {
		width: 95%;
	}
}

	[class*='column-'] {
    float: left;
    padding: 15px;
    width: 100%;
  } 

  p{
  	width: 90%;
  	@include bp-medium {
			width: 100%;
		}
  }

@include bp-medium {
	%column-style{
		@include box-size;
		padding: 10px;
	}

	@for $i from 1 through $columns{
		.column-#{$i}{
			width: 100% / $columns * $i;
			@extend %column-style;
		}
	}
}

@include bp-huge {
	@for $i from 1 through $huge-columns{
		%huge-column-style{
			@include box-size;
			padding: 10px;
		}
		.huge-column-#{$i}{
			width: 100% / $huge-columns * $i;
			@extend %huge-column-style;
		}
	}
}
